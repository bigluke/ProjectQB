<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:security="http://www.springframework.org/schema/security"
 xsi:schemaLocation="http://www.springframework.org/schema/beans 
                     http://www.springframework.org/schema/beans/spring-beans.xsd
                     http://www.springframework.org/schema/security 
                     http://www.springframework.org/schema/security/spring-security.xsd">
<!-- 
1단계 : 인증과 권한 기본 설정 (in-memory 방식으로 사용자 및 권한 설정)
auto-config="true" : 로그인 화면 처리 부터 ~ 로그아웃 자동화(제공받는다)
:UI , Controller 까지 제공받아서 사용 
 -->
<!-- 
<security:http auto-config="true">
	 <security:intercept-url    pattern="/customer/noticeDetail.htm" access="hasRole('ROLE_USER')"/>
     <security:intercept-url    pattern="/customer/noticeReg.htm"    access="hasRole('ROLE_ADMIN')"/>
</security:http>

<security:authentication-manager>
	  <security:authentication-provider>
	  	 <security:user-service>
	  	 	<security:user name="kglim" password="1004" authorities="ROLE_USER"/>
	  	 	<security:user name="admin" password="1004" authorities="ROLE_USER,ROLE_ADMIN"/>
	  	 </security:user-service>
	  </security:authentication-provider>
</security:authentication-manager> 

-->

<!--  
 2단계 
 -커스터마이징 (login page UI 구성)
 요청 : /login 컨트롤러 요청 자동화 처리 : 입력한 ID, PWD 받기 > 인증검사 > in-memory > 권한 검사 > 통과  > 요청한 페이지 전달
      /logout 컨트롤러 요청 자동화 : session 소멸하기 .... (현재는 처리하고 있지 않아요)
      
      개발자가 직접 login, logout 처리 하겠다
    
    login-page="/joinus/login.htm"  url 로 로그인 페이지를 요청  
    authentication-failure-url      로그인 실패시 메시지를 가지고 return
    logout-success-url="/index.htm" 로그인 아웃이 성공하면 이동하는 페이지 
-->

<!-- 
<security:http auto-config="true">
	 <security:csrf disabled="true" />
	 <security:form-login login-page="/joinus/login.htm"
	                      authentication-failure-url="/joinus/login.htm?error"    />
	 <security:logout logout-success-url="/index.htm" />
	 <security:intercept-url    pattern="/customer/noticeDetail.htm" access="hasRole('ROLE_USER')"/>
     <security:intercept-url    pattern="/customer/noticeReg.htm"    access="hasRole('ROLE_ADMIN')"/>
</security:http>

<security:authentication-manager>
	  <security:authentication-provider>
	  	 <security:user-service>
	  	 	<security:user name="kglim" password="1004" authorities="ROLE_USER"/>
	  	 	<security:user name="admin" password="1004" authorities="ROLE_USER,ROLE_ADMIN"/>
	  	 </security:user-service>
	  </security:authentication-provider>
</security:authentication-manager>  
-->
<!-- 3단계 실데이터베이스 인증 처리 -->
<security:http auto-config="true">
	 <security:csrf disabled="true" />
	 <security:form-login login-page="/joinus/login.htm"
	                      authentication-failure-url="/joinus/login.htm?error"    />
	 <security:logout logout-success-url="/index.htm" />
	 <security:intercept-url    pattern="/customer/*Reg.htm" access="hasRole('ROLE_USER')"/>
     <security:intercept-url    pattern="/admin/**"    access="hasRole('ROLE_ADMIN')"/>
</security:http>
<security:authentication-manager>
	<security:authentication-provider>
		<security:jdbc-user-service data-source-ref="driverManagerDataSource"
		 users-by-username-query="SELECT USERID, pwd AS PASSWORD, 1 enabled FROM member where userid=?"
		 authorities-by-username-query="select m.USERID , r.ROLE_NAME  
          							    from member m join roll r 
           								on m.userid = r.userid 
           								where m.userid=?" />	
	</security:authentication-provider>
</security:authentication-manager>

</beans>



