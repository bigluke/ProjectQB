<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="onet.com.admin.dao.AdminDao">

<!-- 재훈 - 10.08 문제분류관련 시작 -->

<select id="lgCategoryList" parameterType="hashmap" resultType="onet.com.vo.CategoryDto">
	select * from question_lg_category order by length(lg_category_code) asc, lg_category_code asc
</select>
<select id="mdCategoryList" parameterType="hashmap" resultType="onet.com.vo.CategoryDto">
	select question_lg_category.lg_category_name, question_md_category.md_category_code, question_md_category.md_category_name 
	from question_lg_category join question_md_category on question_lg_category.lg_category_code = question_md_category.lg_category_code 
	order by length(md_category_code) asc, md_category_code asc
</select>
<select id="smCategoryList" parameterType="hashmap" resultType="onet.com.vo.CategoryDto">
	select question_md_category.md_category_name, question_sm_category.sm_category_code, question_sm_category.sm_category_name 
	from question_sm_category join question_md_category on question_sm_category.md_category_code = question_md_category.md_category_code 
	order by length(sm_category_code) asc, sm_category_code asc
</select>

<!-- 재훈 - 10.08 문제분류관련 끝 -->

<!-- 재훈 - 10.15 문제난이도 관련 시작 -->
<select id="questionLevelList" parameterType="hashmap" resultType="onet.com.vo.CategoryDto">
	select * from question_level
</select>
<!-- 재훈 - 10.15 문제난이도 관련 끝 -->

<!-- 재훈 - 10.15 새 문제 만들기 관련 시작-->
<insert id="newQuestionInsert" parameterType="onet.com.vo.QuestionDto">
	insert into question(question_type, question_name, question_img,
	question_answer, sm_category_code, level_code, member_id) 
	values(#{question_type}, #{question_name}, #{question_img}, 
	#{question_answer}, #{sm_category_code}, #{level_code}, #{member_id});
</insert>

<insert id="newQuestionChoiceInsert" parameterType="onet.com.vo.Question_choiceDto">
	insert into question_choice(question_num, question_choice_num, question_choice_content) 
	values(#{question_num}, #{question_choice_num}, #{question_choice_content});
</insert>

<!-- 재훈 - 10.15 새 문제 만들기 관련 끝 -->

<!-- 영준 - 10.10 회원관리 관련 시작 -->
<select id="memberList" parameterType="hashmap" resultType="onet.com.vo.MemberDto">
	select class_name, member_id, member_name, member_email,
	member_phone, member_enable from member
</select>
<select id="roleList" parameterType="hashmap" resultType="onet.com.vo.RoleDto">
	SELECT * FROM role
	WHERE NOT role_code='ROLE_ADMIN'
</select>


<!-- 영준 - 10.10 회원관리 관련 끝 -->


<!-- 민지 10.12 클래스멤버리스트 ,클래스 리스트 관련  -->
<select id="classMemberList" parameterType="onet.com.vo.MemberDto" resultType="onet.com.vo.MemberDto">
	select m.class_name, m.member_id, m.member_name, m.member_email,
	m.member_phone, m.member_enable, mr.role_code,r.role_desc from member m, member_role mr, role r, class c where c.class_name = m.class_name and c.class_num=#{class_num} and  m.member_id=mr.member_id and mr.role_code =r.role_code
</select>

<select id="classList" parameterType="hashmap" resultType="onet.com.vo.ClassDto">
	select class_name, teacher_name, class_start_date, class_end_date, class_enable, class_num
	 from class
</select>

<select id="classlist" parameterType="onet.com.vo.ClassDto" resultType="onet.com.vo.ClassDto">
	select class_name, teacher_name, class_start_date, class_end_date, class_enable
	 from class where class_num=#{class_num}
</select>
<!-- 클래스 멤버 수정 -->
 <update id="classMemberUpdate" parameterType="onet.com.vo.MemberDto">
 UPDATE member m, member_role mr SET m.member_email=#{member_email}, m.member_phone=#{member_phone}, m.class_name=#{class_name}, mr.role_code=#{role_code} where m.member_id=#{member_id} and mr.member_id=#{member_id}
 </update>

<!-- 민지 10.12 클래스멤버리스트 관련 끝 -->



<!-- 영준 - 10.10 회원관리 전체조회 끝 -->


<!-- 민지 10.15 클래스 수정 관련 -->
<update id="classUpdate" parameterType="onet.com.vo.ClassDto">
 UPDATE class SET class_name=#{class_name}, teacher_name=#{teacher_name},class_start_date=#{class_start_date}, class_end_date=#{class_end_date} where class_num=#{class_num}
 </update>
<!-- 민지 10.15 클래스 수정 관련 끝 -->

<!-- 영준 - 10.12 회원관리 회원정보 수정 시작 -->
<update id="updateMember" parameterType="onet.com.vo.MemberDto">
	UPDATE member m, member_role mr
	SET m.member_email=#{member_email}, 
	m.member_phone=#{member_phone}, m.class_name=#{class_name},
	mr.role_code=#{role_code}
	where m.member_id=#{member_id} and mr.member_id=#{member_id}
</update>
<!-- 영준 - 10.12 회원관리 회원정보 수정 끝 -->

<!-- 민지 10.13 클래스 멤버 삭제 관련 -->
 <update id="classMemberDelete" parameterType="onet.com.vo.MemberDto">
 UPDATE member m, member_role mr SET m.class_name='no_class', mr.role_code='ROLE_MEMBER' where m.member_id=#{member_id} and mr.member_id=#{member_id}
</update>
<!-- 민지 10.13 클래스 멤버 삭제 관련 끝 -->



<!-- 정원 10.15 문제분류관리 insert 시작 -->
<select id="lgCatAddCheak" resultType="int">
	select CONVERT(substring(lg_category_code, 2), UNSIGNED) as cate_num from question_lg_category order by cate_num desc limit 1
</select>

<insert id="lgCatAdd" parameterType="onet.com.vo.CategoryDto">
	insert into question_lg_category values (#{lg_category_code},#{lg_category_name})
</insert> 

<select id="mdCatAddCheck" resultType="int">
	select CONVERT(substring(md_category_code, 2), UNSIGNED) as cate_num from question_md_category order by cate_num desc limit 1
</select>

<select id="lgCatCode" resultType="String">
	select lg_category_code from question_lg_category where lg_category_name=#{selectLgCat}
</select>

<insert id="mdCatAdd" parameterType="onet.com.vo.CategoryDto">
	insert into question_md_category values(#{md_category_code},#{md_category_name},#{lg_category_code})
</insert>

<select id="mdCatCode" resultType="String">
	select md_category_code from question_md_category where md_category_name=#{selectMdCat}
</select>

<select id="smCatAddCheck" resultType="int">
	select CONVERT(substring(sm_category_code, 2), UNSIGNED) as cate_num from question_sm_category order by cate_num desc limit 1
</select>

<insert id="smCatAdd" parameterType="onet.com.vo.CategoryDto">
	insert into question_sm_category values(#{sm_category_code},#{sm_category_name},#{md_category_code})
</insert>

<select id="lgCatAddIdCheck" parameterType="String" resultType="String">
	select lg_category_name from question_lg_category where lg_category_name=#{lgCatAdd}
</select>

<select id="mdCatAddIdCheck" parameterType="String" resultType="String">
	select md_category_name from question_md_category where md_category_name=#{mdCatAdd}
</select>

<select id="smCatAddIdCheck" parameterType="String" resultType="String">
	select sm_category_name from question_sm_category where sm_category_name=#{smCatAdd}
</select>

<!-- 정원 10.15 문제분류관리 insert 끝 -->


<!-- 태용 10.15 클래스 생성, 클래스 유효성검사  -->
<insert id="classInsert" parameterType="onet.com.vo.ClassDto">
	insert into class(class_name, teacher_name, class_start_date, class_end_date, class_enable) values(#{class_name}, #{teacher_name}, #{class_start_date}, #{class_end_date}, 1);
</insert>
<select id="classCheck" resultType="String">
	select class_name from class where class_name = #{class_name}
</select>
<!-- 태용 10.15 클래스 생성, 클래스 유효성검사  끝  -->

<!-- 영준 10.15 회원정보 삭제(실제 삭제X) 시작 -->
<update id="deleteMember" parameterType="onet.com.vo.MemberDto">
	UPDATE member 
	SET member_enable=0
	WHERE member_id=#{member_id}
</update>
<!-- 영준 10.15 회원정보 삭제(실제 삭제X) 끝 -->


</mapper>
