<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="onet.com.common.dao.CommonDao">
<!-- 한결 10월 12일 공지사항 및 시험일정(강사 학생 메인페이지) 시작 -->
<select id="notice" parameterType="String" resultType="onet.com.vo.NoticeDto">
   select * from notice where class_name = (select class_name from member where member_id = #{member_id});
</select>
<select id="exam_info" parameterType="String" resultType="onet.com.vo.Exam_infoDto">
   select * from exam_info where class_name = (select class_name from member where member_id = #{member_id});
</select>
<!-- 한결 10월 12일 공지사항 및 시험일정(강사 학생 메인페이지) 끝 -->

<!-- 민지 10.19 관리자 공지사하 및 시험일정시작 -->
<select id="adminnotice" parameterType="onet.com.vo.NoticeDto" resultType="onet.com.vo.NoticeDto">
	select * from notice where class_name = #{class_name}
</select>
<select id="adminexam_info" parameterType="onet.com.vo.ExamInfoDto" resultType="onet.com.vo.ExamInfoDto">
	select * from exam_info where class_name = #{class_name}
</select>
<!-- 민지 10.19 관리자 공지사하 및 시험일정 끝 -->

<!-- 한결 10월 12일 공지사항 및 시험일정(강사 학생 메인페이지) 끝 -->


<!-- 현이 10.15 examScheduleDetail 페이지 select 시작 -->
<select id="examScheduleDetail" parameterType="int" resultType="onet.com.vo.ExamInfoDto">
	select exam_info_num, exam_paper_num, class_name, exam_info_name, exam_info_desc, exam_info_member, 
	exam_info_date, exam_info_start, exam_info_end, exam_info_time 
	from exam_info where exam_info_num = #{exam_info_num}
</select>
<!-- 현이 10.15 examScheduleDetail 페이지 select 끝 -->


<!-- 양회준 10.15 내 정보 수정 시작 -->
<select id="myPageInfo" resultType="onet.com.vo.MemberDto">
	select * from member where member_id = #{member_id}
</select>

<update id="myPageUpdate" parameterType="onet.com.vo.MemberDto">
 	UPDATE member 
	SET 
	member_pwd=#{member_pwd},
	member_name=#{member_name},
	member_email=#{member_email},	
	member_phone=#{member_phone}
	where member_id=#{member_id}
</update>

<update id="myPageDrop" parameterType="onet.com.vo.MemberDto">
 	UPDATE member 
	SET 
	member_enable=#{member_enable}
	where member_id=#{member_id}
</update>

<!-- 양회준 10.15 내 정보 수정 끝 -->


<select id="memberDrop" resultType="int">
	select count(*) from member where member_id = #{param1} and member_pwd = #{param2}
</select>

<!-- 현이 - ExamPaperDo 10.18 시작 -->
<select id="examPaperDoQuestion" parameterType="int" resultType="onet.com.vo.ExamPaperDoQuestionDto"><!-- 문제 정보 가져오기 -->
	select q.question_num, q.question_type, q.question_name, q.question_img, q.question_answer, 
	eq.exam_question_seq, eq.exam_question_score 
	from question q join exam_question eq
	on (q.question_num = eq.question_num)
	where eq.exam_paper_num = 
	(select exam_paper_num from exam_info where exam_info_num = #{exam_info_num})
	order by eq.exam_question_seq
</select>

<select id="examPaperDoQuestion_choice" parameterType="int" resultType="onet.com.vo.Question_choiceDto"><!-- 문제 보기 가져오기 -->
	select question_num, question_choice_num, question_choice_content, question_choice_image 
	from question_choice
	where question_num in 	
	(select q.question_num
	from question q join exam_question eq
	on (q.question_num = eq.question_num)
	where eq.exam_paper_num = 
	(select exam_paper_num from exam_info 
	where exam_info_num = #{exam_info_num})
	)
	order by question_num, question_choice_num
</select>

<select id="questionCount" parameterType="int" resultType="int"><!-- 한 시험지에 담긴 문제의 개수 -->
	select count(*) as questionCount
	from exam_question
	where exam_paper_num = (select exam_paper_num from exam_info where exam_info_num = #{exam_info_num})
</select>
<!-- 현이 - ExamPaperDo 10.18 끝 -->


<!-- 재훈 - 문제관리 관련 10.21 시작 -->
<select id="singleQuestionDeleteSearch" parameterType="int" resultType="onet.com.vo.ExamQuestionDto">
	select * from exam_question where question_num = #{question_num}
</select>
<delete id="singleQuestionDelete" parameterType="onet.com.vo.QuestionDto">
	delete from question where question_num = #{question_num}
</delete>
<delete id="singleQuestionChoiceDelete" parameterType="onet.com.vo.Question_choiceDto">
	delete from question_choice where question_num = #{question_num}
</delete>
<select id="questionInfo" parameterType="int" resultType="onet.com.vo.QuestionDto">
	select * from question where question_num = ${question_num}
</select>
<select id="questionChoiceInfo" parameterType="int" resultType="onet.com.vo.Question_choiceDto">
	select * from question_choice where question_num = ${question_num}
</select>
<select id="questionCategoryInfo" resultType="onet.com.vo.CategoryDto">
select * from question qs join question_sm_category sm on (qs.sm_category_code = sm.sm_category_code) 
   join question_md_category md on (sm.md_category_code = md.md_category_code) 
   join question_lg_category lg on (lg.lg_category_code = md.lg_category_code)
   where question_num=#{param1}
</select>

<!-- 재훈 - 문제관리 관련 10.21 끝 -->
<insert id="insertBoardList" parameterType="onet.com.vo.NoticeDto">
	insert into notice values (#{notice_num},#{class_name},#{notice_name},#{member_id},#{notice_content},#{notice_file1},#{notice_file2},#{notice_file3},#{notice_date})
</insert>

<select id="noticeDetail" parameterType="onet.com.vo.NoticeDto" resultType="onet.com.vo.NoticeDto">
	select * from notice where class_name = #{class_name} and notice_num=#{notice_num}
</select>

<select id="noticeNumFind" parameterType="onet.com.vo.NoticeDto" resultType="int">
	select max(notice_num) from notice where class_name=#{class_name} order by notice_num desc;
</select>

<!-- 양회준 10-24 관리자, 강사-학생&성적관리 페이지 -->
<select id="studentInfo" parameterType="String" resultType="onet.com.vo.MemberDto">
	select m.member_id, m.member_email, m.member_name, m.member_phone, m.class_name, mr.role_code
	from member m join member_role mr on m.member_id=mr.member_id
	where not m.member_id=#{member_id} and not m.member_enable=0 
	and mr.role_code='ROLE_STUDENT' and m.class_name = 
	(select class_name from member where member_id=#{member_id})
</select>
<!-- 학생 차트 정보 -->
<select id="studentChartInfo" parameterType="String" resultType="onet.com.vo.Score_chartDto">
	select * from score_chart 
	where member_id=#{member_id} and class_name = 
	(select class_name from member where member_id=#{member_id})
</select>
<!-- 클래스 차트 정보 -->
<select id="classChartInfo" parameterType="String" resultType="onet.com.vo.Class_chartDto">
	select c.class_name, c.exam_info_num, c.class_chart_avg, e.exam_info_name 
	from class_chart c join exam_info e
	on c.exam_info_num=e.exam_info_num
	where c.class_name=#{class_name}
</select>
<!-- 영준 10.25 - 반 등수 추가 시작 -->
<select id="classRank" parameterType="String" resultType="onet.com.vo.Score_chartDto">
select sc.exam_info_num,e.exam_info_name,m.member_name, sc.score_chart_score, score_chart_rank
from score_chart as sc, exam_info e, member m
where sc.exam_info_num=e.exam_info_num
and m.member_id=sc.member_id
and e.exam_info_name=#{exam_info_name}
order by
sc.score_chart_score DESC
</select>
<!-- 영준 10.25 - 반 등수 추가 끝 -->
</mapper>